apiVersion: v1
kind: Namespace
metadata:
  name: django-app
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: django-app
  namespace: django-app
spec:
  replicas: 2
  selector:
    matchLabels:
      app: django-app
  template:
    metadata:
      labels:
        app: django-app
    spec:
      volumes:
        - name: static-files
          emptyDir: {}
        - name: env-volume
          secret:
            secretName: django-env-prod  # Mount this secret as .env.prod file

      initContainers:
        - name: django-init
          image: docker.io/ganeshjchoudhary/django-ecommerce:__IMAGE_TAG__
          command: ["sh", "-c", "python manage.py migrate && python manage.py collectstatic --noinput"]
          envFrom:
            - secretRef:
                name: django-secrets
          volumeMounts:
            - name: static-files
              mountPath: /app/static
            - name: env-volume
              mountPath: /app/.env.prod
              subPath: .env.prod

      containers:
        - name: django-app
          image: docker.io/ganeshjchoudhary/django-ecommerce:__IMAGE_TAG__
          command: ["gunicorn", "ecommerce.wsgi:application", "--bind", "0.0.0.0:8000"]
          ports:
            - containerPort: 8000
          envFrom:
            - secretRef:
                name: django-secrets
          volumeMounts:
            - name: static-files
              mountPath: /app/static
            - name: env-volume
              mountPath: /app/.env.prod
              subPath: .env.prod
---
apiVersion: v1
kind: Service
metadata:
  name: django-app-service
  namespace: django-app
spec:
  selector:
    app: django-app
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
      nodePort: 30008
